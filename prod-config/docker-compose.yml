name: SAYAN-NUXT-STRAPI

services:
  sayan-cms:
    build:
      context: ../cms
      dockerfile: ../prod-config/Dockerfile.cms
    ports:
      - "1337:1337"
    restart: unless-stopped
    networks:
      - sayannet
    # Для Portainer (убрать если используется .env)
    env_file:
      - stack.env
    environment:
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      STRAPI_TOKEN: ${NUXT_STRAPI_TOKEN}
      STRAPI_URL: ${NUXT_PUBLIC_STRAPI_URL}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: sayan-db
      DATABASE_CLIENT: mysql
      DATABASE_PORT: 3306
      DATABASE_SSL: "false"
      NODE_ENV: production
    depends_on:
      sayan-db:
        condition: service_healthy

  sayan-frontend:
    build:
      context: ../frontend
      dockerfile: ../prod-config/Dockerfile.frontend
      args:
        NODE_ENV: ${NODE_ENV}
        NUXT_PUBLIC_STRAPI_URL: ${NUXT_PUBLIC_STRAPI_URL}
        NUXT_STRAPI_TOKEN: ${NUXT_STRAPI_TOKEN}
    ports:
      - "3000:3000"
    # Для Portainer (убрать если используется .env)
    env_file:
      - stack.env
    restart: unless-stopped
    networks:
      - sayannet

  sayan-db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    env_file:
      - stack.env
    volumes:
      - db:/var/lib/mysql
    networks:
      - sayannet
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DATABASE_USERNAME}", "-p${DATABASE_PASSWORD}" ]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 10s

networks:
  sayannet:
    driver: bridge

volumes:
  db: